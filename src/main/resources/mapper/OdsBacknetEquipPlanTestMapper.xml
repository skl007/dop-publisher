<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.unicom.dop.doppublisher.mapper.OdsBacknetEquipPlanTestMapper">
    <!--    新增退网设备-从表入库-->
    <insert id="insertAll" parameterType="java.util.ArrayList">
        insert into ods_backnet_equip_plan_test
        (id,plan_num,plan_name,plan_time,area_city,neName,equip_type,equip_factory,backnet_type,
        ne_type,plan_backnet_time,electricity_price,is_buy_maintenance,save_money,is_bs,is_user_machroom,net_time,backnet_reason,
        is_used,is_invest,is_invest_workable,power_number,before_backnet_current,after_backnet_current,remarks,create_by)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.id},#{item.planNum},#{item.planName},#{item.planTime},#{item.areaCity},#{item.neName},#{item.equipType},
            #{item.equipFactory},#{item.backnetType},#{item.neType},#{item.planBacknetTime},#{item.electricityPrice},
            #{item.isBuyMaintenance},#{item.saveMoney},#{item.isBs},#{item.isUserMachroom},#{item.netTime},
            #{item.backnetReason},#{item.isUsed},#{item.isInvest},#{item.isInvestWorkable},#{item.powerNumber},#{item.beforeBacknetCurrent},
            #{item.afterBacknetCurrent},#{item.remarks},#{item.createBy})
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.unicom.dop.doppublisher.entity.OdsBacknetEquipPlanTest">
        update ods_backnet_equip_plan_test
        <set>
            <if test="planNum !=null and planNum !=''">plan_num=#{planNum},</if>
            <if test="planName !=null and planName !=''">plan_name=#{planName},</if>
            <if test="planTime !=null and planTime !=''">plan_time=#{planTime},</if>
            <if test="equipType !=null and equipType !=''">equip_type=#{equipType},</if>
            <if test="equipFactory !=null and equipFactory !=''">equip_factory=#{equipFactory},</if>
            <if test="backnetType !=null and backnetType!=''">backnet_type=#{backnetType},</if>
            <if test="neType !=null and neType!=''">ne_type=#{neType},</if>
            <if test="planBacknetTime!=null and planBacknetTime!=''">plan_backnet_time=#{planBacknetTime},</if>
            <if test="electricityPrice !=null and electricityPrice !=0.0">electricity_price=#{electricityPrice},</if>
            <if test="isBuyMaintenance !=null and isBuyMaintenance !=''">is_buy_maintenance=#{isBuyMaintenance},</if>
            <if test="saveMoney !=null and saveMoney !=''">save_money=#{saveMoney},</if>
            <if test="isBs !=null and isBs !=''">is_bs=#{isBs},</if>
            <if test="isUserMachroom !=null and isUserMachroom !=''">is_user_machroom=#{isUserMachroom},</if>
            <if test="netTime !=null">net_time=#{netTime},</if>
            <if test="backnetReason !=null and backnetReason !=''">backnet_reason=#{backnetReason},</if>
            <if test="isUsed !=null and isUsed !=''">is_used=#{isUsed},</if>
            <if test="isInvest !=null and isInvest !=''">is_invest=#{isInvest},</if>
            <if test="isInvestWorkable !=null and isInvestWorkable !=''">is_invest_workable=#{isInvestWorkable},</if>
            <if test="powerNumber !=null and powerNumber !=''">power_number=#{powerNumber},</if>
            <if test="beforeBacknetCurrent !=null and beforeBacknetCurrent !=''">
                before_backnet_current=#{beforeBacknetCurrent},
            </if>
            <if test="afterBacknetCurrent != null and afterBacknetCurrent !=''">
                after_backnet_current=#{afterBacknetCurrent},
            </if>
            <if test="remarks !=null and remarks !=''">remarks=#{remarks},</if>
            <if test="createBy !=null and createBy !=''">create_by=#{createBy}</if>
        </set>
        where area_city=#{areaCity} and neName=#{neName}
    </update>
    <delete id="deleteByPrimaryKey">
        delete from ods_backnet_equip_plan_test where area_city=#{areaCity} and neName=#{neName}
    </delete>
    <delete id="deleteByPlanNumAndPlanName">
        delete from ods_backnet_equip_plan_test where plan_num=#{planNum} and plan_name=#{planName}
    </delete>
    <delete id="deleteDWDByPlanNumAndPlanName">
        delete from dwd_backnet_equip_analyse_test where plan_num=#{planNum} and plan_name=#{planName}
    </delete>

    <resultMap id="baseMap" type="com.unicom.dop.doppublisher.entity.OdsBacknetEquipPlanTest">
        <result column="plan_num" property="planNum"></result>
        <result column="plan_name" property="planName"></result>
        <result column="area_city" property="areaCity"></result>
        <result column="neName" property="neName"></result>
        <result column="equip_type" property="equipType"></result>
        <result column="equip_factory" property="equipFactory"></result>
        <result column="backnet_type" property="backnetType"></result>
        <result column="ne_type" property="neType"></result>
        <result column="plan_backnet_time" property="planBacknetTime"></result>
        <result column="electricity_price" property="electricityPrice"></result>
        <result column="is_buy_maintenance" property="isBuyMaintenance"></result>
        <result column="save_money" property="saveMoney"></result>
        <result column="is_bs" property="isBs"></result>
        <result column="is_user_machroom" property="isUserMachroom"></result>
        <result column="net_time" property="netTime"></result>
        <result column="backnet_reason" property="backnetReason"></result>
        <result column="is_used" property="isUsed"></result>
        <result column="is_invest" property="isInvest"></result>
        <result column="is_invest_workable" property="isInvestWorkable"></result>
        <result column="power_number" property="powerNumber"></result>
        <result column="before_backnet_current" property="beforeBacknetCurrent"></result>
        <result column="after_backnet_current" property="afterBacknetCurrent"></result>
        <result column="remarks" property="remarks"></result>
        <result column="create_by" property="createBy"></result>
        <result column="insert_time" property="insertTime"></result>
    </resultMap>
    <select id="selectBackNetByPlanNumAndPlanName"
            resultMap="baseMap">
        SELECT
        plan_num,
        plan_name,
        area_city,
        neName,
        equip_type,
        equip_factory,
        backnet_type,
        ne_type,
        plan_backnet_time,
        electricity_price,
        is_buy_maintenance,
        save_money,
        is_bs,
        is_user_machroom,
        net_time,
        backnet_reason,
        is_used,
        is_invest,
        is_invest_workable,
        power_number,
        before_backnet_current,
        after_backnet_current,
        remarks,
        create_by,
        insert_time
        FROM
        ods_backnet_equip_plan_test
        WHERE plan_num = #{planNum}
        AND plan_name = #{planName}
        <if test="equipType !=null and equipType !=''">
            and equip_type=#{equipType}
        </if>
        <if test="equipFactory !=null and equipFactory !=''">
            and equip_factory=#{equipFactory}
        </if>
        <if test="neName !=null and neName !=''">
            and neName=#{neName}
        </if>
        ORDER BY plan_backnet_time,area_city,neName DESC
        LIMIT ${(pageNo-1)*pageSize},${pageSize}
    </select>
    <select id="countAll" resultType="java.lang.Integer">
        SELECT
        COUNT(plan_num) AS total
        FROM
        ods_backnet_equip_plan_test
        WHERE plan_num = #{planNum}
        <if test="planName !=null and planName !=''">
            AND plan_name = #{planName}
        </if>
        <if test="equipType !=null and equipType !=''">
            and equip_type=#{equipType}
        </if>
        <if test="equipFactory !=null and equipFactory !=''">
            and equip_factory=#{equipFactory}
        </if>
        <if test="neName !=null and neName !=''">
            and neName=#{neName}
        </if>
    </select>
    <resultMap id="planMap" type="java.util.Map">
        <result column="plan_num" property="planNum"></result>
        <result column="plan_name" property="planName"></result>
        <result column="area_city" property="areaCity"></result>
        <result column="profession" property="profession"></result>
        <result column="plan_backnet_time" property="planBacknetTime"></result>
        <result column="backNetEquipNumber" property="backNetEquipNumber"></result>
        <result column="plan_save_costs" property="planSaveCosts"></result>
    </resultMap>
    <select id="selectAllPlan" resultType="java.util.Map">
        select
        t3.plan_num  planNum,
        t3.plan_name planName,
        t3.plan_time planTime,
        t3.area_city areaCity,
        profession,
        backnet_eqp_num backNetEquipNumber,
        plan_save_costs planSaveCosts
        from (
        select plan_num, plan_name,plan_time,area_city
        from ods_backnet_equip_plan_test
        where 1=1
        <if test="flag==1">
            and plan_time = concat(concat(#{planYear},'-'),#{planMonth})
        </if>
        <if test="flag==2">
            and plan_time > concat(#{planYear},'-00') and plan_time &lt; concat(#{planYear},'-13')
        </if>
        group by plan_num, plan_name,plan_time,area_city) t3
        left join (
        SELECT
        plan_num,
        COUNT(*) backnet_eqp_num,
        ROUND(SUM(IFNULL(save_money,0) + IFNULL(power_dissipation,0) *24*1.1* IFNULL(electricity_price,5.5)*DATEDIFF(CONCAT(YEAR(plan_backnet_time),'-12-31'),plan_backnet_time)/1000),2)  plan_save_costs
        FROM dwd_backnet_equip_analyse_test
        where 1=1
        <if test="flag==1">
            and plan_time = concat(concat(#{planYear},'-'),#{planMonth})
        </if>
        <if test="flag==2">
            and plan_time > concat(#{planYear},'-00') and plan_time &lt; concat(#{planYear},'-13')
        </if>
        GROUP BY plan_num, plan_name,plan_time,area_city) t1 on t3.plan_num = t1.plan_num
        LEFT JOIN (
        select plan_num,profession
        from dwd_backnet_equip_analyse_test
        where profession is not NULL
        <if test="flag==1">
            and plan_time = concat(concat(#{planYear},'-'),#{planMonth})
        </if>
        <if test="flag==2">
            and plan_time > concat(#{planYear},'-00') and plan_time &lt; concat(#{planYear},'-13')
        </if>
        GROUP BY plan_num, plan_name,plan_time,area_city) t2 on t1.plan_num = t2.plan_num
        WHERE 1=1
        <if test="planNum !=null and planNum !=''">
            and t3.plan_num LIKE concat('%',#{planNum},'%')
        </if>
        <if test="planName !=null and planName !=''">
            AND t3.plan_name LIKE concat('%',#{planName},'%')
        </if>
        <if test="areaCity !=null and areaCity !=''">
            AND t3.area_city=#{areaCity}
        </if>
        <if test="profession !=null and profession !=''">
            AND t2.profession=#{profession}
        </if>
        ORDER BY t3.area_city,t3.plan_time DESC
        LIMIT ${(pageNo-1)*pageSize},${pageSize}
<!--        select-->
<!--        t1.plan_num as planNum,-->
<!--        plan_name planName,-->
<!--        plan_time planTime,-->
<!--        area_city areaCity,-->
<!--        profession,-->
<!--        backnet_eqp_num as backNetEquipNumber,-->
<!--        plan_save_costs as planSaveCosts-->
<!--        from (-->
<!--        SELECT-->
<!--        plan_num,-->
<!--        plan_name,-->
<!--        plan_time,-->
<!--        area_city,-->
<!--        COUNT(*) backnet_eqp_num,-->
<!--        ROUND(SUM(IFNULL(save_money,0) + IFNULL(power_dissipation,0) *24*1.1*-->
<!--        IFNULL(electricity_price,5.5)*DATEDIFF(CONCAT(YEAR(plan_backnet_time),'-12-31'),plan_backnet_time)/1000),2)-->
<!--        plan_save_costs-->
<!--        FROM dwd_backnet_equip_analyse_test-->
<!--        &#45;&#45; where plan_time > '2021-00' and '2021-13' > plan_time-->
<!--        where 1=1-->
<!--        <if test="flag==1">-->
<!--            and plan_time = concat(concat(#{planYear},'-'),#{planMonth})-->
<!--        </if>-->
<!--        <if test="flag==2">-->
<!--            and plan_time > concat(#{planYear},'-00') and plan_time &lt; concat(#{planYear},'-13')-->
<!--        </if>-->
<!--        GROUP BY plan_num, plan_name,area_city) t1-->
<!--        LEFT JOIN (-->
<!--        select plan_num,profession-->
<!--        from dwd_backnet_equip_analyse_test-->
<!--        where profession is not NULL-->
<!--        &#45;&#45; and plan_time > '2021-00' and '2021-13' > plan_time-->
<!--        <if test="flag==1">-->
<!--            and plan_time = concat(concat(#{planYear},'-'),#{planMonth})-->
<!--        </if>-->
<!--        <if test="flag==2">-->
<!--            and plan_time > concat(#{planYear},'-00') and plan_time &lt; concat(#{planYear},'-13')-->
<!--        </if>-->
<!--        GROUP BY plan_num, plan_name,area_city) t2 on t1.plan_num = t2.plan_num-->
<!--        WHERE 1=1-->
<!--        <if test="planNum !=null and planNum !=''">-->
<!--            and t1.plan_num LIKE concat('%',#{planNum},'%')-->
<!--        </if>-->
<!--        <if test="planName !=null and planName !=''">-->
<!--            AND t1.plan_name LIKE concat('%',#{planName},'%')-->
<!--        </if>-->
<!--        <if test="areaCity !=null and areaCity !=''">-->
<!--            AND t1.area_city=#{areaCity}-->
<!--        </if>-->
<!--        <if test="profession !=null and profession !=''">-->
<!--            AND t2.profession=#{profession}-->
<!--        </if>-->
<!--        ORDER BY t1.plan_time,t1.plan_name,t1.area_city DESC-->
<!--        LIMIT ${(pageNo-1)*pageSize},${pageSize}-->
    </select>
    <select id="selectAllPlanCount" resultType="java.lang.Integer">
        select count(1) from (select
        t1.plan_num as planNum,
        plan_name planName,
        plan_time planTime,
        area_city areaCity,
        profession,
        backnet_eqp_num as backNetEquipNumber,
        plan_save_costs as planSaveCosts
        from (
        SELECT
        plan_num,
        plan_name,
        plan_time,
        area_city,
        COUNT(*) backnet_eqp_num,
        ROUND(SUM(IFNULL(save_money,0) + IFNULL(power_dissipation,0) *24*1.1*
        IFNULL(electricity_price,5.5)*DATEDIFF(CONCAT(YEAR(NOW()),'-12-31'),plan_backnet_time)/1000),2) plan_save_costs
        FROM dwd_backnet_equip_analyse_test
        where 1=1
        <if test="flag==1">
            and plan_time = concat(concat(#{planYear},'-'),#{planMonth})
        </if>
        <if test="flag==2">
            and plan_time > concat(#{planYear},'-00') and plan_time &lt; concat(#{planYear},'-13')
        </if>
        GROUP BY plan_num, plan_name,area_city) t1
        LEFT JOIN (
        select plan_num,profession
        from dwd_backnet_equip_analyse_test
        where profession is not NULL
        <if test="flag==1">
            and plan_time = concat(concat(#{planYear},'-'),#{planMonth})
        </if>
        <if test="flag==2">
            and plan_time > concat(#{planYear},'-00') and plan_time &lt; concat(#{planYear},'-13')
        </if>
        GROUP BY plan_num, plan_name,area_city) t2 on t1.plan_num = t2.plan_num
        WHERE 1=1
        <if test="planNum !=null and planNum !=''">
            and t1.plan_num LIKE concat('%',#{planNum},'%')
        </if>
        <if test="planName !=null and planName !=''">
            AND t1.plan_name LIKE concat('%',#{planName},'%')
        </if>
        <if test="areaCity !=null and areaCity !=''">
            AND t1.area_city=#{areaCity}
        </if>
        <if test="profession !=null and profession !=''">
            AND t2.profession=#{profession}
        </if>
        )
    </select>


</mapper>